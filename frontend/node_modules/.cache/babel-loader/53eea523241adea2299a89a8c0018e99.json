{"ast":null,"code":"var _jsxFileName = \"/home/ilkyaz/Desktop/courses/495/ispark-car-parks/frontend/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker } from \"react-google-maps\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: '',\n      district: '',\n      ParkID: ''\n    };\n  }\n\n  async componentDidMount() {\n    const response = await fetch('/api/data', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const body = await response.json();\n    this.setState({\n      data: body\n    });\n  }\n\n  createDistrictOptions() {\n    let districtList = [];\n\n    for (var i in this.state.data) {\n      districtList.push(this.state.data[i].Ilce);\n    }\n\n    districtList = [...new Set(districtList)];\n    let uniqueDistrictOptions = [];\n\n    for (var j in districtList) {\n      uniqueDistrictOptions.push(React.createElement(\"option\", {\n        key: j,\n        value: districtList[j],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, districtList[j]));\n    }\n\n    return uniqueDistrictOptions;\n  }\n\n  createCarParkOptions() {\n    let carParkList = [];\n\n    for (var i in this.state.data) {\n      if (this.state.data[i].Ilce === this.state.district) carParkList.push(React.createElement(\"option\", {\n        key: i,\n        value: this.state.data[i].ParkID,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, this.state.data[i].ParkAdi));\n    }\n\n    return carParkList;\n  }\n\n  getFreeParkingSpaces() {\n    let capacity = 0;\n\n    for (var i in this.state.data) {\n      if (Number(this.state.data[i].ParkID) === Number(this.state.ParkID)) {\n        console.log(\"in if\");\n        capacity = this.state.data[i].BosKapasite;\n      }\n    }\n\n    return capacity;\n  }\n\n  getUsedParkingSpaces() {\n    let capacity = 0;\n    let freeCapacity = 0;\n\n    for (var i in this.state.data) {\n      if (this.state.data[i].ParkID === this.state.ParkID) {\n        freeCapacity = this.state.data[i].BosKapasite;\n        capacity = this.state.data[i].Kapasitesi;\n      }\n    }\n\n    return capacity - freeCapacity;\n  }\n\n  getLatitude() {\n    let lat = 40.96;\n\n    for (var i in this.state.data) {\n      if (this.state.data[i].ParkID === this.state.ParkID) {\n        lat = this.state.data[i].Latitude;\n      }\n    }\n\n    return lat;\n  }\n\n  getLongitude() {\n    let lon = 29.10;\n\n    for (var i in this.state.data) {\n      if (this.state.data[i].ParkID === this.state.ParkID) {\n        lon = this.state.data[i].Longitude;\n      }\n    }\n\n    return lon;\n  }\n\n  render() {\n    const CarParkLocation = withScriptjs(withGoogleMap(props => React.createElement(GoogleMap, {\n      defaultZoom: 15,\n      defaultCenter: {\n        lat: props.lat,\n        lng: props.lon\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, props.showMarker && React.createElement(Marker, {\n      position: {\n        lat: props.lat,\n        lng: props.lon\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }))));\n\n    const DistrictSelectionForm = () => React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Districts of Car Parks:\")), React.createElement(\"select\", {\n      value: this.state.district,\n      onChange: e => this.setState({\n        district: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, this.createDistrictOptions()));\n\n    const CarParkSelectionForm = () => React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"Car Parks:\")), React.createElement(\"select\", {\n      value: this.state.ParkID,\n      onChange: e => this.setState({\n        ParkID: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, this.createCarParkOptions()));\n\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"Ispark Car Parks\"), React.createElement(DistrictSelectionForm, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }), React.createElement(CarParkSelectionForm, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \"Free Parking Spaces:\")), this.getFreeParkingSpaces(), React.createElement(CarParkLocation, {\n      showMarker: \"true\",\n      lon: Number(this.getLongitude()),\n      lat: Number(this.getLatitude()),\n      googleMapURL: \"https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places\",\n      loadingElement: React.createElement(\"div\", {\n        style: {\n          height: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }),\n      containerElement: React.createElement(\"div\", {\n        style: {\n          height: '500px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }),\n      mapElement: React.createElement(\"div\", {\n        style: {\n          height: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/ilkyaz/Desktop/courses/495/ispark-car-parks/frontend/src/App.js"],"names":["React","Component","withScriptjs","withGoogleMap","GoogleMap","Marker","App","state","data","district","ParkID","componentDidMount","response","fetch","method","headers","body","json","setState","createDistrictOptions","districtList","i","push","Ilce","Set","uniqueDistrictOptions","j","createCarParkOptions","carParkList","ParkAdi","getFreeParkingSpaces","capacity","Number","console","log","BosKapasite","getUsedParkingSpaces","freeCapacity","Kapasitesi","getLatitude","lat","Latitude","getLongitude","lon","Longitude","render","CarParkLocation","props","lng","showMarker","DistrictSelectionForm","e","target","value","CarParkSelectionForm","height"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker } from \"react-google-maps\"\n\nclass App extends Component {\n  state = {\n    data: '',\n    district: '',\n    ParkID: ''\n  };\n\n  async componentDidMount() {\n    const response = await fetch('/api/data', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      }\n    });\n\n    const body = await response.json();\n\n    this.setState({ data: body });\n  }\n\n  createDistrictOptions() {\n    let districtList = [];\n\n    for (var i in this.state.data) {\n      districtList.push(this.state.data[i].Ilce);\n    }\n\n    districtList = [...new Set(districtList)];\n\n    let uniqueDistrictOptions = [];\n\n    for (var j in districtList) {\n      uniqueDistrictOptions.push(<option key={j} value={districtList[j]}>{districtList[j]}</option>)\n    }\n\n    return uniqueDistrictOptions;\n  }\n\n  createCarParkOptions() {\n    let carParkList = [];\n\n    for (var i in this.state.data) {\n      if (this.state.data[i].Ilce === this.state.district)\n        carParkList.push(<option key={i} value={this.state.data[i].ParkID}>{this.state.data[i].ParkAdi}</option>)\n    }\n\n    return carParkList;\n  }\n\n  getFreeParkingSpaces() {\n    let capacity = 0;\n\n    for (var i in this.state.data) {\n      if (Number(this.state.data[i].ParkID) === Number(this.state.ParkID)) {\n        console.log(\"in if\");\n        capacity = this.state.data[i].BosKapasite;\n      }\n    }\n\n    return capacity;\n  }\n\n  getUsedParkingSpaces() {\n    let capacity = 0;\n    let freeCapacity = 0;\n\n    for (var i in this.state.data) {\n\n      if (this.state.data[i].ParkID === this.state.ParkID) {\n        freeCapacity = this.state.data[i].BosKapasite;\n        capacity = this.state.data[i].Kapasitesi;\n      }\n    }\n\n    return capacity - freeCapacity;\n  }\n\n  getLatitude() {\n    let lat = 40.96;\n\n    for (var i in this.state.data) {\n\n      if (this.state.data[i].ParkID === this.state.ParkID) {\n        lat = this.state.data[i].Latitude;\n      }\n    }\n\n    return lat;\n  }\n\n  getLongitude() {\n    let lon = 29.10;\n\n    for (var i in this.state.data) {\n\n      if (this.state.data[i].ParkID === this.state.ParkID) {\n        lon = this.state.data[i].Longitude;\n      }\n    }\n\n    return lon;\n\n  }\n\n  render() {\n    const CarParkLocation = withScriptjs(withGoogleMap((props) =>\n      <GoogleMap\n        defaultZoom={ 15 }\n        defaultCenter={{ lat: props.lat, lng: props.lon }}\n      >\n        { props.showMarker && \n          <Marker position={{ lat: props.lat, lng: props.lon }} />\n        }\n      </GoogleMap>\n    ))\n\n    const DistrictSelectionForm = () =>\n        <form>\n            <p>\n              <strong>Districts of Car Parks:</strong>\n            </p>\n            <select\n              value={this.state.district}\n              onChange={e => this.setState({ district: e.target.value })}>\n                  {this.createDistrictOptions()}\n            </select>\n            \n        </form>\n\n    const CarParkSelectionForm = () => \n        <form>\n            <p>\n              <strong>Car Parks:</strong>\n            </p>\n            <select\n              value={this.state.ParkID}\n              onChange={e => this.setState({ ParkID: e.target.value })}>\n                  {this.createCarParkOptions()}\n            </select>\n            \n        </form>\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          Ispark Car Parks\n        </header>\n\n        <DistrictSelectionForm/>\n\n        <CarParkSelectionForm/>\n\n        <p>\n          <strong>Free Parking Spaces:</strong>\n        </p>\n\n        {this.getFreeParkingSpaces()}\n\n        <CarParkLocation\n          showMarker=\"true\"\n          lon={Number(this.getLongitude())}\n          lat={Number(this.getLatitude())}\n          googleMapURL=\"https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places\"\n          loadingElement={<div style={{ height: '100%' }} />}\n          containerElement={<div style={{ height: '500px' }} />}\n          mapElement={<div style={{ height: '100%' }} />}\n        />\n      \n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}