{"ast":null,"code":"var _jsxFileName = \"/home/ilkyaz/Desktop/courses/495/ispark-car-parks/frontend/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker } from \"react-google-maps\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: '',\n      district: '',\n      carpark: '',\n      districtResponse: '',\n      carparkResponse: ''\n    };\n\n    this.handleDistrictSelection = async e => {\n      e.preventDefault();\n      const response = await fetch('/district', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          post: this.state.district\n        })\n      });\n      const body = await response.text();\n      this.setState({\n        districtResponse: body\n      });\n    };\n\n    this.handleCarParkSelection = async e => {\n      e.preventDefault();\n      const response = await fetch('/carpark', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          post: this.state.carpark\n        })\n      });\n      const body = await response.text();\n      this.setState({\n        carparkResponse: body\n      });\n    };\n  }\n\n  async componentDidMount() {\n    const url = \"https://api.ibb.gov.tr/ispark/Park\";\n    const response = await fetch(url);\n    const data = await response.json();\n    this.setState({\n      data: data\n    });\n  }\n\n  createDistrictOptions() {\n    let districtList = [];\n\n    for (var i in this.state.data) {\n      districtList.push(React.createElement(\"option\", {\n        key: i,\n        value: this.state.data[i].Ilce,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, this.state.data[i].Ilce));\n    }\n\n    return districtList;\n  }\n\n  createCarParkOptions() {\n    let carParkList = [];\n\n    for (var i in this.state.data) {\n      if (this.state.data[i].Ilce === this.state.district) carParkList.push(React.createElement(\"option\", {\n        key: i,\n        value: this.state.data[i].ParkAdi,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, this.state.data[i].ParkAdi));\n    }\n\n    return carParkList;\n  }\n\n  getFreeParkingSpaces() {\n    let capacity = 0;\n\n    for (var i in this.state.data) {\n      if (this.state.data[i].ParkAdi === this.state.carpark) capacity = this.state.data[i].BosKapasite;\n    }\n\n    return capacity;\n  }\n\n  getUsedParkingSpaces() {\n    let capacity = 0;\n    let freeCapacity = 0;\n\n    for (var i in this.state.data) {\n      if (this.state.data[i].ParkAdi === this.state.carpark) {\n        freeCapacity = this.state.data[i].BosKapasite;\n        capacity = this.state.data[i].Kapasitesi;\n      }\n    }\n\n    return capacity - freeCapacity;\n  }\n\n  getLatitude() {\n    let lat = 0.0;\n\n    for (var i in this.state.data) {\n      if (this.state.data[i].ParkAdi === this.state.carpark) {\n        lat = this.state.data[i].Latitude;\n      }\n    }\n\n    return lat;\n  }\n\n  getLongitude() {\n    let lon = 0.0;\n\n    for (var i in this.state.data) {\n      if (this.state.data[i].ParkAdi === this.state.carpark) {\n        lon = this.state.data[i].Longitude;\n      }\n    }\n\n    return lon;\n  }\n\n  render() {\n    const CarParkLocation = withScriptjs(withGoogleMap(props => React.createElement(GoogleMap, {\n      defaultZoom: 15,\n      defaultCenter: {\n        lat: props.lat,\n        lng: props.lon\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, props.showMarker && React.createElement(Marker, {\n      position: {\n        lat: props.lat,\n        lng: props.lon\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }))));\n\n    const CarParkSelectionForm = () => React.createElement(\"form\", {\n      onSubmit: this.handleCarParkSelection,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, \"Car Parks:\")), React.createElement(\"select\", {\n      value: this.state.carpark,\n      onChange: e => this.setState({\n        carpark: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, this.createCarParkOptions()), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"Select Car Park\"));\n\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \"Ispark Car Parks\"), React.createElement(\"form\", {\n      onSubmit: this.handleDistrictSelection,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, \"Districts of Car Parks:\")), React.createElement(\"select\", {\n      value: this.state.district,\n      onChange: e => this.setState({\n        district: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, this.createDistrictOptions()), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, \"Select District\")), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, this.state.districtResponse), this.state.districtResponse && React.createElement(CarParkSelectionForm, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, this.state.carparkResponse), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, \"Free Parking Spaces:\")), this.getFreeParkingSpaces(), React.createElement(CarParkLocation, {\n      showMarker: \"true\",\n      lon: Number(this.getLongitude()),\n      lat: Number(this.getLatitude()),\n      googleMapURL: \"https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places\",\n      loadingElement: React.createElement(\"div\", {\n        style: {\n          height: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }),\n      containerElement: React.createElement(\"div\", {\n        style: {\n          height: '500px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }),\n      mapElement: React.createElement(\"div\", {\n        style: {\n          height: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/ilkyaz/Desktop/courses/495/ispark-car-parks/frontend/src/App.js"],"names":["React","Component","withScriptjs","withGoogleMap","GoogleMap","Marker","App","state","data","district","carpark","districtResponse","carparkResponse","handleDistrictSelection","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","post","text","setState","handleCarParkSelection","componentDidMount","url","json","createDistrictOptions","districtList","i","push","Ilce","createCarParkOptions","carParkList","ParkAdi","getFreeParkingSpaces","capacity","BosKapasite","getUsedParkingSpaces","freeCapacity","Kapasitesi","getLatitude","lat","Latitude","getLongitude","lon","Longitude","render","CarParkLocation","props","lng","showMarker","CarParkSelectionForm","target","value","Number","height"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,SAASC,YAAT,EAAuBC,aAAvB,EAAsCC,SAAtC,EAAiDC,MAAjD,QAA+D,mBAA/D;;AAEA,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BM,KAD0B,GAClB;AACNC,MAAAA,IAAI,EAAE,EADA;AAENC,MAAAA,QAAQ,EAAE,EAFJ;AAGNC,MAAAA,OAAO,EAAE,EAHH;AAINC,MAAAA,gBAAgB,EAAE,EAJZ;AAKNC,MAAAA,eAAe,EAAE;AALX,KADkB;;AAAA,SAkB1BC,uBAlB0B,GAkBA,MAAMC,CAAN,IAAW;AAEnCA,MAAAA,CAAC,CAACC,cAAF;AAEA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,WAAD,EAAc;AACxCC,QAAAA,MAAM,EAAE,MADgC;AAExCC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SAF+B;AAKxCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEC,UAAAA,IAAI,EAAE,KAAKhB,KAAL,CAAWE;AAAnB,SAAf;AALkC,OAAd,CAA5B;AAQA,YAAMW,IAAI,GAAG,MAAMJ,QAAQ,CAACQ,IAAT,EAAnB;AAEA,WAAKC,QAAL,CAAc;AAAEd,QAAAA,gBAAgB,EAAES;AAApB,OAAd;AAED,KAlCyB;;AAAA,SAoC1BM,sBApC0B,GAoCD,MAAMZ,CAAN,IAAW;AAElCA,MAAAA,CAAC,CAACC,cAAF;AAEA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,UAAD,EAAa;AACvCC,QAAAA,MAAM,EAAE,MAD+B;AAEvCC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SAF8B;AAKvCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEC,UAAAA,IAAI,EAAE,KAAKhB,KAAL,CAAWG;AAAnB,SAAf;AALiC,OAAb,CAA5B;AAQA,YAAMU,IAAI,GAAG,MAAMJ,QAAQ,CAACQ,IAAT,EAAnB;AAEA,WAAKC,QAAL,CAAc;AAAEb,QAAAA,eAAe,EAAEQ;AAAnB,OAAd;AAED,KApDyB;AAAA;;AAS1B,QAAMO,iBAAN,GAA0B;AACxB,UAAMC,GAAG,GAAG,oCAAZ;AACA,UAAMZ,QAAQ,GAAG,MAAMC,KAAK,CAACW,GAAD,CAA5B;AAEA,UAAMpB,IAAI,GAAG,MAAMQ,QAAQ,CAACa,IAAT,EAAnB;AAEA,SAAKJ,QAAL,CAAc;AAAEjB,MAAAA,IAAI,EAAEA;AAAR,KAAd;AACD;;AAsCDsB,EAAAA,qBAAqB,GAAG;AACtB,QAAIC,YAAY,GAAG,EAAnB;;AAEA,SAAK,IAAIC,CAAT,IAAc,KAAKzB,KAAL,CAAWC,IAAzB,EAA+B;AAC7BuB,MAAAA,YAAY,CAACE,IAAb,CAAkB;AAAQ,QAAA,GAAG,EAAED,CAAb;AAAgB,QAAA,KAAK,EAAE,KAAKzB,KAAL,CAAWC,IAAX,CAAgBwB,CAAhB,EAAmBE,IAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiD,KAAK3B,KAAL,CAAWC,IAAX,CAAgBwB,CAAhB,EAAmBE,IAApE,CAAlB;AACD;;AAED,WAAOH,YAAP;AACD;;AAEDI,EAAAA,oBAAoB,GAAG;AACrB,QAAIC,WAAW,GAAG,EAAlB;;AAEA,SAAK,IAAIJ,CAAT,IAAc,KAAKzB,KAAL,CAAWC,IAAzB,EAA+B;AAE7B,UAAI,KAAKD,KAAL,CAAWC,IAAX,CAAgBwB,CAAhB,EAAmBE,IAAnB,KAA4B,KAAK3B,KAAL,CAAWE,QAA3C,EACE2B,WAAW,CAACH,IAAZ,CAAiB;AAAQ,QAAA,GAAG,EAAED,CAAb;AAAgB,QAAA,KAAK,EAAE,KAAKzB,KAAL,CAAWC,IAAX,CAAgBwB,CAAhB,EAAmBK,OAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAoD,KAAK9B,KAAL,CAAWC,IAAX,CAAgBwB,CAAhB,EAAmBK,OAAvE,CAAjB;AACH;;AAED,WAAOD,WAAP;AACD;;AAEDE,EAAAA,oBAAoB,GAAG;AACrB,QAAIC,QAAQ,GAAG,CAAf;;AAEA,SAAK,IAAIP,CAAT,IAAc,KAAKzB,KAAL,CAAWC,IAAzB,EAA+B;AAE7B,UAAI,KAAKD,KAAL,CAAWC,IAAX,CAAgBwB,CAAhB,EAAmBK,OAAnB,KAA+B,KAAK9B,KAAL,CAAWG,OAA9C,EACE6B,QAAQ,GAAG,KAAKhC,KAAL,CAAWC,IAAX,CAAgBwB,CAAhB,EAAmBQ,WAA9B;AACH;;AAED,WAAOD,QAAP;AACD;;AAEDE,EAAAA,oBAAoB,GAAG;AACrB,QAAIF,QAAQ,GAAG,CAAf;AACA,QAAIG,YAAY,GAAG,CAAnB;;AAEA,SAAK,IAAIV,CAAT,IAAc,KAAKzB,KAAL,CAAWC,IAAzB,EAA+B;AAE7B,UAAI,KAAKD,KAAL,CAAWC,IAAX,CAAgBwB,CAAhB,EAAmBK,OAAnB,KAA+B,KAAK9B,KAAL,CAAWG,OAA9C,EAAuD;AACrDgC,QAAAA,YAAY,GAAG,KAAKnC,KAAL,CAAWC,IAAX,CAAgBwB,CAAhB,EAAmBQ,WAAlC;AACAD,QAAAA,QAAQ,GAAG,KAAKhC,KAAL,CAAWC,IAAX,CAAgBwB,CAAhB,EAAmBW,UAA9B;AACD;AACF;;AAED,WAAOJ,QAAQ,GAAGG,YAAlB;AACD;;AAEDE,EAAAA,WAAW,GAAG;AACZ,QAAIC,GAAG,GAAG,GAAV;;AAEA,SAAK,IAAIb,CAAT,IAAc,KAAKzB,KAAL,CAAWC,IAAzB,EAA+B;AAE7B,UAAI,KAAKD,KAAL,CAAWC,IAAX,CAAgBwB,CAAhB,EAAmBK,OAAnB,KAA+B,KAAK9B,KAAL,CAAWG,OAA9C,EAAuD;AACrDmC,QAAAA,GAAG,GAAG,KAAKtC,KAAL,CAAWC,IAAX,CAAgBwB,CAAhB,EAAmBc,QAAzB;AACD;AACF;;AAED,WAAOD,GAAP;AACD;;AAEDE,EAAAA,YAAY,GAAG;AACb,QAAIC,GAAG,GAAG,GAAV;;AAEA,SAAK,IAAIhB,CAAT,IAAc,KAAKzB,KAAL,CAAWC,IAAzB,EAA+B;AAE7B,UAAI,KAAKD,KAAL,CAAWC,IAAX,CAAgBwB,CAAhB,EAAmBK,OAAnB,KAA+B,KAAK9B,KAAL,CAAWG,OAA9C,EAAuD;AACrDsC,QAAAA,GAAG,GAAG,KAAKzC,KAAL,CAAWC,IAAX,CAAgBwB,CAAhB,EAAmBiB,SAAzB;AACD;AACF;;AAED,WAAOD,GAAP;AAED;;AAEDE,EAAAA,MAAM,GAAG;AACP,UAAMC,eAAe,GAAGjD,YAAY,CAACC,aAAa,CAAEiD,KAAD,IACjD,oBAAC,SAAD;AACE,MAAA,WAAW,EAAG,EADhB;AAEE,MAAA,aAAa,EAAE;AAAEP,QAAAA,GAAG,EAAEO,KAAK,CAACP,GAAb;AAAkBQ,QAAAA,GAAG,EAAED,KAAK,CAACJ;AAA7B,OAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIGI,KAAK,CAACE,UAAN,IAAoB,oBAAC,MAAD;AAAQ,MAAA,QAAQ,EAAE;AAAET,QAAAA,GAAG,EAAEO,KAAK,CAACP,GAAb;AAAkBQ,QAAAA,GAAG,EAAED,KAAK,CAACJ;AAA7B,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJvB,CADgD,CAAd,CAApC;;AASA,UAAMO,oBAAoB,GAAG,MAC3B;AAAM,MAAA,QAAQ,EAAE,KAAK7B,sBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADZ,EAIY;AAAQ,MAAA,KAAK,EAAE,KAAKnB,KAAL,CAAWG,OAA1B;AAAmC,MAAA,QAAQ,EAAEI,CAAC,IAAI,KAAKW,QAAL,CAAc;AAAEf,QAAAA,OAAO,EAAEI,CAAC,CAAC0C,MAAF,CAASC;AAApB,OAAd,CAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKtB,oBAAL,EADH,CAJZ,EAOY;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAPZ,CADF;;AAWA,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAKE;AAAM,MAAA,QAAQ,EAAE,KAAKtB,uBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADF,CADJ,EAII;AAAQ,MAAA,KAAK,EAAE,KAAKN,KAAL,CAAWE,QAA1B;AAAoC,MAAA,QAAQ,EAAEK,CAAC,IAAI,KAAKW,QAAL,CAAc;AAAEhB,QAAAA,QAAQ,EAAEK,CAAC,CAAC0C,MAAF,CAASC;AAArB,OAAd,CAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAK3B,qBAAL,EADH,CAJJ,EAOI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAPJ,CALF,EAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKvB,KAAL,CAAWI,gBAAf,CAfF,EAiBG,KAAKJ,KAAL,CAAWI,gBAAX,IAA+B,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjBlC,EAmBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKJ,KAAL,CAAWK,eAAf,CAnBF,EAqBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,CArBF,EAwBG,KAAK0B,oBAAL,EAxBH,EA0BE,oBAAC,eAAD;AACE,MAAA,UAAU,EAAC,MADb;AAEE,MAAA,GAAG,EAAEoB,MAAM,CAAC,KAAKX,YAAL,EAAD,CAFb;AAGE,MAAA,GAAG,EAAEW,MAAM,CAAC,KAAKd,WAAL,EAAD,CAHb;AAIE,MAAA,YAAY,EAAC,mFAJf;AAKE,MAAA,cAAc,EAAE;AAAK,QAAA,KAAK,EAAE;AAAEe,UAAAA,MAAM,EAAE;AAAV,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALlB;AAME,MAAA,gBAAgB,EAAE;AAAK,QAAA,KAAK,EAAE;AAAEA,UAAAA,MAAM,EAAE;AAAV,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANpB;AAOE,MAAA,UAAU,EAAE;AAAK,QAAA,KAAK,EAAE;AAAEA,UAAAA,MAAM,EAAE;AAAV,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA1BF,CADF;AAuCD;;AA9LyB;;AAiM5B,eAAerD,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker } from \"react-google-maps\"\n\nclass App extends Component {\n  state = {\n    data: '',\n    district: '',\n    carpark: '',\n    districtResponse: '',\n    carparkResponse: ''\n  };\n\n  async componentDidMount() {\n    const url = \"https://api.ibb.gov.tr/ispark/Park\";\n    const response = await fetch(url);\n\n    const data = await response.json();\n\n    this.setState({ data: data} )\n  }\n\n  handleDistrictSelection = async e => {\n\n    e.preventDefault();\n\n    const response = await fetch('/district', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ post: this.state.district }),\n    });\n\n    const body = await response.text();\n    \n    this.setState({ districtResponse: body });\n\n  };\n\n  handleCarParkSelection = async e => {\n\n    e.preventDefault();\n\n    const response = await fetch('/carpark', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ post: this.state.carpark })\n    });\n\n    const body = await response.text();\n\n    this.setState({ carparkResponse: body });\n\n  }\n\n  createDistrictOptions() {\n    let districtList = [];\n\n    for (var i in this.state.data) {\n      districtList.push(<option key={i} value={this.state.data[i].Ilce}>{this.state.data[i].Ilce}</option>)\n    }\n\n    return districtList;\n  }\n\n  createCarParkOptions() {\n    let carParkList = [];\n\n    for (var i in this.state.data) {\n\n      if (this.state.data[i].Ilce === this.state.district)\n        carParkList.push(<option key={i} value={this.state.data[i].ParkAdi}>{this.state.data[i].ParkAdi}</option>)\n    }\n\n    return carParkList;\n  }\n\n  getFreeParkingSpaces() {\n    let capacity = 0;\n\n    for (var i in this.state.data) {\n\n      if (this.state.data[i].ParkAdi === this.state.carpark)\n        capacity = this.state.data[i].BosKapasite;\n    }\n\n    return capacity;\n  }\n\n  getUsedParkingSpaces() {\n    let capacity = 0;\n    let freeCapacity = 0;\n\n    for (var i in this.state.data) {\n\n      if (this.state.data[i].ParkAdi === this.state.carpark) {\n        freeCapacity = this.state.data[i].BosKapasite;\n        capacity = this.state.data[i].Kapasitesi;\n      }\n    }\n\n    return capacity - freeCapacity;\n  }\n\n  getLatitude() {\n    let lat = 0.0;\n\n    for (var i in this.state.data) {\n\n      if (this.state.data[i].ParkAdi === this.state.carpark) {\n        lat = this.state.data[i].Latitude;\n      }\n    }\n\n    return lat;\n  }\n\n  getLongitude() {\n    let lon = 0.0;\n\n    for (var i in this.state.data) {\n\n      if (this.state.data[i].ParkAdi === this.state.carpark) {\n        lon = this.state.data[i].Longitude;\n      }\n    }\n\n    return lon;\n\n  }\n\n  render() {\n    const CarParkLocation = withScriptjs(withGoogleMap((props) =>\n      <GoogleMap\n        defaultZoom={ 15 }\n        defaultCenter={{ lat: props.lat, lng: props.lon }}\n      >\n        {props.showMarker && <Marker position={{ lat: props.lat, lng: props.lon }} />}\n      </GoogleMap>\n    ))\n\n    const CarParkSelectionForm = () => \n      <form onSubmit={this.handleCarParkSelection}>\n                  <p>\n                    <strong>Car Parks:</strong>\n                  </p>\n                  <select value={this.state.carpark} onChange={e => this.setState({ carpark: e.target.value })}>\n                    {this.createCarParkOptions()}\n                  </select>\n                  <button type=\"submit\">Select Car Park</button>\n              </form>\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          Ispark Car Parks\n        </header>\n\n        <form onSubmit={this.handleDistrictSelection}>\n            <p>\n              <strong>Districts of Car Parks:</strong>\n            </p>\n            <select value={this.state.district} onChange={e => this.setState({ district: e.target.value })}>\n              {this.createDistrictOptions()}\n            </select>\n            <button type=\"submit\">Select District</button>\n        </form>\n\n        <p>{this.state.districtResponse}</p>\n\n        {this.state.districtResponse && <CarParkSelectionForm/>}\n\n        <p>{this.state.carparkResponse}</p>\n\n        <p>\n          <strong>Free Parking Spaces:</strong>\n        </p>\n        {this.getFreeParkingSpaces()}\n\n        <CarParkLocation\n          showMarker=\"true\"\n          lon={Number(this.getLongitude())}\n          lat={Number(this.getLatitude())}\n          googleMapURL=\"https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places\"\n          loadingElement={<div style={{ height: '100%' }} />}\n          containerElement={<div style={{ height: '500px' }} />}\n          mapElement={<div style={{ height: '100%' }} />}\n        />\n      \n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}